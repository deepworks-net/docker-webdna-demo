name: Build Docker Image

on:
  push:
    tags:
      - 'centos*-fcgi-*-*'

jobs:
  build_image:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Checkout utils repo
        uses: actions/checkout@v4
        with:
          repository: deepworks-net/utilities.docker
          path: scripts/utils
        
      - name: Parse tag and set environment
        id: env
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          
          # Get service name by removing the build version (last component)
          SERVICE_NAME=$(echo $TAG | rev | cut -d'-' -f2- | rev)
          
          # Extract other components
          DISTRO_FULL=$(echo $TAG | cut -d'-' -f1)
          TYPE=$(echo $TAG | cut -d'-' -f2)
          DNA_VER=$(echo $TAG | cut -d'-' -f3)
          BUILD_VER=$(echo $TAG | cut -d'-' -f4)
          
          # Debug current directory and file structure
          pwd
          ls -la
          
          # Set env file path relative to repository root
          ENV_FILE="centos/centos7.env"  # Removed the leading slash
          IMAGE_NAME="deepworks/webdna"
          
          echo "DOCKER_UTILS_ENV=$ENV_FILE" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_VERSION=$TAG" >> $GITHUB_OUTPUT
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_OUTPUT
    
      - name: Load environment variables
        run: |
          # Debug file existence
          ls -la centos/
          cat ${{ steps.env.outputs.DOCKER_UTILS_ENV }}
          
          while IFS='=' read -r key value; do
            [[ $key =~ ^#.*$ ]] && continue
            [[ -z $key ]] && continue
            value=$(echo "$value" | sed -e 's/^"//' -e 's/"$//' -e "s/^'//" -e "s/'$//")
            echo "$key=$value" >> $GITHUB_ENV
          done < "${{ steps.env.outputs.DOCKER_UTILS_ENV }}"
        
      - name: Build Docker image
        run: |
          chmod +x scripts/utils/build.sh
          scripts/utils/build.sh -c -i ${{ steps.env.outputs.IMAGE_NAME }} -v ${{ steps.env.outputs.IMAGE_VERSION }} -s ${{ steps.env.outputs.SERVICE_NAME }} -t
        env:
          DOCKER_UTILS_ENV: ${{ steps.env.outputs.DOCKER_UTILS_ENV }}